连接 KUKA OfficeLite 到 RoboDK
2019-07-31

许久没做 KRC4 的编程，其实当前工作上也不需要，只是想强制自己练练手。

在写了几十行代码后，我想将机器人本体可视化出来，这样能带来直观的调试感受。因为我没有 KUKA.Sim，所以想到用 RoboDK 来做这件事情。

--------

## 前提

- KUKA OfficeLite 虚拟机
    - 安装了 KicVarGateway 软件，这是我以前工作的成果之一，不便分享
- RoboDK 仿真软件
    - 调用 py_openshowvar 去连接 OfficeLite 中的 KicVarGateway

解释一下：

- [RoboDK](https://robodk.com) 是一款机器人仿真软件，具备 Python / C# / C++ 等编程接口
- [OfficeLite](https://www.kuka.com/en-de/products/robot-systems/software/planning-project-engineering-service-safety/kuka_officelite) 是 KUKA 的控制器仿真软件，它接近于一台 KRC（库卡机器人控制器），但不具备可视化功能（需要 [KUKA.Sim](https://www.kuka.com/en-us/products/robotics-systems/software/simulation-planning-optimization/kuka_sim)）
- KicVarGateway 是我和前同事 LT 合作<sup>[1]</sup>推出的服务端软件，运行于 KRC 内
- [py_openshowvar](https://pypi.org/project/py-openshowvar/) 是运行于外部计算机的客户端软件库，我实现后[已经开源](https://github.com/linuxsand/py_openshowvar)

如果你不喜欢使用这套私有的连接技术，可自行使用 TCP/IP socket 来实现；那么你就需要在 KRC 中安装 Ethernet KRL 来让库卡的编程语言（KRL）具备网络通信能力，同时在 PC 端利用 RoboDK 的脚本功能实现网络通信。

*[1]：LT 制定了通信协议，我实现了代码。*

-------

## 开始

要想可视化机器人运动，只要能快速频繁地读取机器人的各关节度数就行。对于 KRC，就是频繁读取系统变量 `$AXIS_ACT`，将其值解析为浮点数，调用 RoboDK 的 API 就能实现预期目的。

RoboDK API: <https://robodk.com/doc/en/RoboDK-API.html>

当然，需要先创建带有 KUKA 机器人的 RoboDK 工程，请使用 KR 210-2 这款本体，它是 OfficeLite 使用的本体型号。

我在 RoboDK 中创建了两个脚本，一个是定期频繁读取机器人关节读数的脚本（`poll_joints.py`），也就是将控制器同步到本体模型；另一个脚本（`send_joints.py`）则相反，将本体模型的关节角同步到控制器，例如我在 RoboDK 中手动拖拽了模型，运行 `send_joints.py`，它就将模型的关节角写入 KRC 的用户自定义全局变量（也可以偷懒利用系统内建的 `XHOME` 变量）；回到 KRC 端，使用几行 KRL 代码就可以从变量中取出数值，拼接为 `AXIS` 类型，最后 PTP 插补，这就完成了模型到控制器的手动同步。


---------



优酷

<iframe width=520  height=288 src='http://player.youku.com/embed/XNDI5MzkyNzUyNA==' frameborder=0 'allowfullscreen'></iframe>

------------

Youtube

<iframe width="560" height="315" src="https://www.youtube.com/embed/DwKwxEhbRDA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
